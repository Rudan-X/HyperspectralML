vertex.label.color=V(g1)$color,vertex.size=0,layout=as.matrix(layoutcoor),
edge.label=E(g1)$flux,edge.label.cex=0.8,edge.label.color="black")
PSrateEPS=read.csv("MATLAB/barley_model/PSrate_EPS.csv")
PRrateEPS=read.csv("MATLAB/barley_model/PRrate_EPS.csv")
rates=rbind(PSrateEPS,PRrateEPS)
flux=rates[,ncol(rates)]
E(g1)$flux=round(flux[ind1],2)
plot(g1,vertex.shape=g1$shapes,edge.arrow.size=.2,vertex.label.cex=V(g1)$cex,
vertex.label.color=V(g1)$color,vertex.size=0,layout=as.matrix(layoutcoor),
edge.label=E(g1)$flux,edge.label.cex=0.8,edge.label.color="black")
flux=c(flux,(flux[1]-flux[9])*30)
############## FLUX ANALYSIS ###################
E(g1)$reactions=rep('',ecount(g1))
E(g1)$reactions[c(4,8,12,14,17,19,23,26,28,32,34,36,40,42,44,48,50,54,56,58,60,62,66,70,74,78,83,86)]=
c('v1','v2','v3','v4','v5','v6','v7','v8','v9','v10','v11','v12','v13','v21','v22','v23','v24',
'v111','v112','v2out','v113','v1in','v121','v122','v123','v124','v131','photosynthesis')
PSrate=read.csv("MATLAB/barley_model/PSrate.csv")
PRrate=read.csv("MATLAB/barley_model/PRrate.csv")
rates=rbind(PSrate,PRrate)
reactions=c('v1','v2','v3','null','v5','v6','v7','v8','v9','v10','v13','v16','v23','v32','v33','Pi','v24',
'v111','v112','v113','v121','v122','v123','v124','v131','v1in','v2out','photosynthesis')
flux=rates[,ncol(rates)]
flux=c(flux,(flux[1]-flux[9])*30)
ind1=match(E(g1)$reactions,reactions)
E(g1)$flux=round(flux[ind1],2)
plot(g1,vertex.shape=g1$shapes,edge.arrow.size=.2,vertex.label.cex=V(g1)$cex,
vertex.label.color=V(g1)$color,vertex.size=0,layout=as.matrix(layoutcoor),
edge.label=E(g1)$flux,edge.label.cex=0.8,edge.label.color="black")
flux[9]
flux
17+9
flux[26]
flux=rates[,ncol(rates)]
flux=c(flux,(flux[1]-flux[26])*30)
ind1=match(E(g1)$reactions,reactions)
E(g1)$flux=round(flux[ind1],2)
plot(g1,vertex.shape=g1$shapes,edge.arrow.size=.2,vertex.label.cex=V(g1)$cex,
vertex.label.color=V(g1)$color,vertex.size=0,layout=as.matrix(layoutcoor),
edge.label=E(g1)$flux,edge.label.cex=0.8,edge.label.color="black")
(flux[1]-flux[26])*30
flux=rates[,ncol(rates)]
flux=c(flux,(flux[1]-flux[26])*30)
ind1=match(E(g1)$reactions,reactions)
E(g1)$flux=round(flux[ind1],2)
plot(g1,vertex.shape=g1$shapes,edge.arrow.size=.2,vertex.label.cex=V(g1)$cex,
vertex.label.color=V(g1)$color,vertex.size=0,layout=as.matrix(layoutcoor),
edge.label=E(g1)$flux,edge.label.cex=0.8,edge.label.color="black")
ind1=match(E(g1)$reactions,reactions)
ind1
rates[28]
E(g1)$flux[28]
flux
E(g1)$flux
ind1=match(reactions,E(g1)$reactions)
E(g1)$flux=round(flux[ind1],2)
flux[28]
flux=rates[,ncol(rates)]
flux=c(flux,(flux[1]-flux[26])*30)
length(flux)
reactions=c('v1','v2','v3','null','v5','v6','v7','v8','v9','v10','v13','v16','v23','v32','v33','Pi','v24',
'v111','v112','v113','v121','v122','v123','v124','v131','v1in','v2out','photosynthesis')
length(reactions)
flux=rates[,ncol(rates)]
length(reactions)
c('v1','v2','v3','v4','v5','v6','v7','v8','v9','v10','v11','v12','v13','v21','v22','v23','v24')
length(c('v1','v2','v3','v4','v5','v6','v7','v8','v9','v10','v11','v12','v13','v21','v22','v23','v24'))
rates=rates[-17,]
PSrate=read.csv("MATLAB/barley_model/PSrate.csv")
PRrate=read.csv("MATLAB/barley_model/PRrate.csv")
rates=rbind(PSrate,PRrate)
reactions=c('v1','v2','v3','null','v5','v6','v7','v8','v9','v10','v13','v16','v23','v32','v33','v24',
'v111','v112','v113','v121','v122','v123','v124','v131','v1in','v2out','photosynthesis')
rates=rates[-17,]
flux=rates[,ncol(rates)]
flux=c(flux,(flux[1]-flux[26])*30)
ind1=match(reactions,E(g1)$reactions)
E(g1)$flux=round(flux[ind1],2)
ind1=match(E(g1)$reactions,reactions)
E(g1)$flux=round(flux[ind1],2)
plot(g1,vertex.shape=g1$shapes,edge.arrow.size=.2,vertex.label.cex=V(g1)$cex,
vertex.label.color=V(g1)$color,vertex.size=0,layout=as.matrix(layoutcoor),
edge.label=E(g1)$flux,edge.label.cex=0.8,edge.label.color="black")
flux
ind1
PSrate=read.csv("MATLAB/barley_model/PSrate.csv")
PRrate=read.csv("MATLAB/barley_model/PRrate.csv")
rates=rbind(PSrate,PRrate)
reactions=c('v1','v2','v3','null','v5','v6','v7','v8','v9','v10','v13','v16','v23','v32','v33','v24',
'v111','v112','v113','v121','v122','v123','v124','v131','v1in','v2out','photosynthesis')
rates=rates[-17,]
flux=rates[,ncol(rates)]
flux=c(flux,(flux[1]-flux[26])*30)
ind1=match(E(g1)$reactions,reactions)
ind1
length(reactions)
E(g1)$reactions=rep('',ecount(g1))
E(g1)$reactions[c(4,8,12,14,17,19,23,26,28,32,34,36,40,42,44,48,50,54,56,58,60,62,66,70,74,78,83,86)]=
c('v1','v2','v3','v4','v5','v6','v7','v8','v9','v10','v11','v12','v13','v21','v22','v23','v24',
'v111','v112','v2out','v113','v1in','v121','v122','v123','v124','v131','photosynthesis')
PSrate=read.csv("MATLAB/barley_model/PSrate.csv")
PRrate=read.csv("MATLAB/barley_model/PRrate.csv")
rates=rbind(PSrate,PRrate)
reactions=c('v1','v2','v3','null','v5','v6','v7','v8','v9','v10','v13','v16','v23','v31','v32','v33','v24',
'v111','v112','v113','v121','v122','v123','v124','v131','v1in','v2out','photosynthesis')
rates=rates[-17,]
flux=rates[,ncol(rates)]
flux=c(flux,(flux[1]-flux[26])*30)
ind1=match(E(g1)$reactions,reactions)
E(g1)$flux=round(flux[ind1],2)
E(g1)$flux
plot(g1,vertex.shape=g1$shapes,edge.arrow.size=.2,vertex.label.cex=V(g1)$cex,
vertex.label.color=V(g1)$color,vertex.size=0,layout=as.matrix(layoutcoor),
edge.label=E(g1)$flux,edge.label.cex=0.8,edge.label.color="black")
PSrateEPS=read.csv("MATLAB/barley_model/PSrate_EPS.csv")
PRrateEPS=read.csv("MATLAB/barley_model/PRrate_EPS.csv")
rates=rbind(PSrateEPS,PRrateEPS)
flux=rates[,ncol(rates)]
flux=c(flux,(flux[1]-flux[9])*30)
E(g1)$flux=round(flux[ind1],2)
plot(g1,vertex.shape=g1$shapes,edge.arrow.size=.2,vertex.label.cex=V(g1)$cex,
vertex.label.color=V(g1)$color,vertex.size=0,layout=as.matrix(layoutcoor),
edge.label=E(g1)$flux,edge.label.cex=0.8,edge.label.color="black")
flux=c(flux,(flux[1]-flux[26])*30)
E(g1)$flux=round(flux[ind1],2)
plot(g1,vertex.shape=g1$shapes,edge.arrow.size=.2,vertex.label.cex=V(g1)$cex,
vertex.label.color=V(g1)$color,vertex.size=0,layout=as.matrix(layoutcoor),
edge.label=E(g1)$flux,edge.label.cex=0.8,edge.label.color="black")
(flux[1]-flux[26])*30
E(g1)$flux
ind1
flux
PSrate=read.csv("MATLAB/barley_model/PSrate.csv")
PRrate=read.csv("MATLAB/barley_model/PRrate.csv")
rates=rbind(PSrate,PRrate)
reactions=c('v1','v2','v3','null','v5','v6','v7','v8','v9','v10','v13','v16','v23','v31','v32','v33','v24',
'v111','v112','v113','v121','v122','v123','v124','v131','v1in','v2out','photosynthesis')
rates=rates[-17,]
flux=rates[,ncol(rates)]
flux=c(flux,(flux[1]-flux[26])*30)
ind1=match(E(g1)$reactions,reactions)
E(g1)$flux=round(flux[ind1],2)
PSrateEPS=read.csv("MATLAB/barley_model/PSrate_EPS.csv")
PRrateEPS=read.csv("MATLAB/barley_model/PRrate_EPS.csv")
rates=rbind(PSrateEPS,PRrateEPS)
rates=rates[-17,]
flux=rates[,ncol(rates)]
flux=c(flux,(flux[1]-flux[26])*30)
E(g1)$flux=round(flux[ind1],2)
plot(g1,vertex.shape=g1$shapes,edge.arrow.size=.2,vertex.label.cex=V(g1)$cex,
vertex.label.color=V(g1)$color,vertex.size=0,layout=as.matrix(layoutcoor),
edge.label=E(g1)$flux,edge.label.cex=0.8,edge.label.color="black")
flux
ind1
E(g1)$flux
plot(g1,vertex.shape=g1$shapes,edge.arrow.size=.2,vertex.label.cex=V(g1)$cex,
vertex.label.color=V(g1)$color,vertex.size=0,layout=as.matrix(layoutcoor),
edge.label=E(g1)$flux,edge.label.cex=0.8,edge.label.color="black")
E(g1)$reactions=rep('',ecount(g1))
E(g1)$reactions[c(4,8,12,14,17,19,23,26,28,32,34,36,40,42,44,48,50,54,56,58,60,62,66,70,74,78,83,86)]=
c('v1','v2','v3','v4','v5','v6','v7','v8','v9','v10','v11','v12','v13','v21','v22','v23','v24',
'v111','v112','v2out','v113','v1in','v121','v122','v123','v124','v131','photosynthesis')
PSrate=read.csv("MATLAB/barley_model/PSrate.csv")
PRrate=read.csv("MATLAB/barley_model/PRrate.csv")
rates=rbind(PSrate,PRrate)
reactions=c('v1','v2','v3','null','v5','v6','v7','v8','v9','v10','v13','v16','v23','v31','v32','v33','v24',
'v111','v112','v113','v121','v122','v123','v124','v131','v1in','v2out','photosynthesis')
rates=rates[-17,]
rates=rates*30;
flux=rates[,ncol(rates)]
flux=c(flux,flux[1]-flux[26])
ind1=match(E(g1)$reactions,reactions)
E(g1)$flux=round(flux[ind1],2)
plot(g1,vertex.shape=g1$shapes,edge.arrow.size=.2,vertex.label.cex=V(g1)$cex,
vertex.label.color=V(g1)$color,vertex.size=0,layout=as.matrix(layoutcoor),
edge.label=E(g1)$flux,edge.label.cex=0.8,edge.label.color="black")
PSrateEPS=read.csv("MATLAB/barley_model/PSrate_EPS.csv")
PRrateEPS=read.csv("MATLAB/barley_model/PRrate_EPS.csv")
rates=rbind(PSrateEPS,PRrateEPS)
rates=rates*30;
rates=rates[-17,]
flux=rates[,ncol(rates)]
flux=c(flux,flux[1]-flux[26])
E(g1)$flux=round(flux[ind1],2)
plot(g1,vertex.shape=g1$shapes,edge.arrow.size=.2,vertex.label.cex=V(g1)$cex,
vertex.label.color=V(g1)$color,vertex.size=0,layout=as.matrix(layoutcoor),
edge.label=E(g1)$flux,edge.label.cex=0.8,edge.label.color="black")
source("~/CAPITALIZE_ML/script/Rfunctions.R")
check=read.delim("C:/Users/Rudan/Documents/orphan.txt")
View(check)
check=read.delim("C:/Users/Rudan/Documents/orphan.txt",header = F)
View(check)
colnames(check)='Orphan genes'
View(check)
write.csv(check,file="C:/Users/Rudan/Desktop/orphan genes/all_orphan_genes.csv")
write.csv(check,file="C:/Users/Rudan/Desktop/orphan genes/all_orphan_genes.csv",row.names = F)
segments=3
rm(list = ls())
# list.of.packages <- c("pls","dplyr","plotrix","ggplot2","ggpubr","gridExtra","chemometrics","reshape2")
# invisible(lapply(list.of.packages, library, character.only = TRUE))
setwd("C:/Users/Rudan/Documents/GitHub/HyperspectralML/")
for (file in c("R_Burnett/","myR/")){
filen<-paste0("C:/Users/Rudan/Documents/GitHub/HyperspectralML/R/",file)
myls <- list.files(path=filen,pattern="*.R")
myls<-paste0(filen,myls)
invisible(sapply(myls,FUN=source))
}
vars<-c("SLA","C",  "N",  "CN", "d13C","d15N","NPQ_ind_amp","NPQ_ind_rate","NPQ_rel_amp","NPQ_rel_rate",
"NPQ_rel_res","phiPSII_ind_amp","phiPSII_ind_rate","phiPSII_ind_res" , "NPQ_ind_linear",
"maxNPQ","endNPQ","endFvFm","initialFvFm","Vpmax","Vmax","SL", "a400","gsw","Vpmax.Vmax","iWUE" )
cormat<-matrix(0,26,3)
ncount<-matrix(0,26,3)
rownames(cormat)<-vars
years1 <- c(2021,2021,2022)
years2 <- c(2022,2023,2023)
y=1
traitHSR1<- read.csv(paste0("data/combined_data/traits_and_HSR",years1[y],"_genotype_averaged.csv"))
traitHSR2<- read.csv(paste0("data/combined_data/traits_and_HSR",years2[y],"_genotype_averaged.csv"))
ind <- which(colnames(traitHSR1)%in%"mean_350")
ind <- which(colnames(traitHSR1)%in%"mean_350")
traits1 <- traitHSR1[,seq(1,ind-1)]
ind <- which(colnames(traitHSR2)%in%"mean_350")
traits2 <- traitHSR2[,seq(1,ind-1)]
rm(traitHSR1)
rm(traitHSR2)
traits1<- read.csv(paste0("data/combined_data/traits_and_HSR",years1[y],"_genotype_averaged.csv"))
traits2<- read.csv(paste0("data/combined_data/traits_and_HSR",years2[y],"_genotype_averaged.csv"))
ind <- which(colnames(traits1)%in%"mean_350")
traits1 <- traits1[,seq(1,ind-1)]
ind <- which(colnames(traits2)%in%"mean_350")
traits2 <- traits2[,seq(1,ind-1)]
rownames(traits1) <- traits1$Accession
rownames(traits2) <- traits2$Accession
View(traits1)
View(traits2)
trait1_v <- traits1[,vars[v]]
v=1
trait1_v <- traits1[,vars[v]]
trait1_v <- data.frame(accession=traits1[,"Accession"], value=traits1[,vars[v]])
View(trait1_v)
trait2_v <- data.frame(accession=traits2[,"Accession"], value=traits2[,vars[v]])
View(trait1_v)
View(trait2_v)
rownames(traits1_v) <- traits1_v$Accession
rownames(trait1_v) <- trait1_v$Accession
rownames(trait2_v) <- trait2_v$Accession
acc <- intersect(trait1_v$Accession,trait2_v$Accession)
trait1_v <- data.frame(Accession=traits1[,"Accession"], value=traits1[,vars[v]])
trait2_v <- data.frame(Accession=traits2[,"Accession"], value=traits2[,vars[v]])
rownames(trait1_v) <- trait1_v$Accession
rownames(trait2_v) <- trait2_v$Accession
acc <- intersect(trait1_v$Accession,trait2_v$Accession)
trait1_v <- trait1_v[acc,]
trait2_v <- trait2_v[acc,]
rm(list = ls())
# setwd("/work/xu2/HyperspectralML/")
setwd("C:/Users/Rudan/Documents/HyperspectralML_complete")
load(file="correlation_traits_spearman.RData")
View(cormat)
rm(list = ls())
vars<-c("SLA","C",  "N",  "CN", "d13C","d15N","Vpmax","Vmax","SL", "a400","gsw","Vpmax.Vmax","iWUE" ,"NPQ_ind_amp","NPQ_ind_rate","NPQ_rel_amp","NPQ_rel_rate",
"NPQ_rel_res","phiPSII_ind_amp","phiPSII_ind_rate","phiPSII_ind_res" , "NPQ_ind_linear",
"maxNPQ","endNPQ","endFvFm","initialFvFm")
cormat<-matrix(0,26,3)
ncount<-matrix(0,26,3)
rownames(cormat)<-vars
years1 <- c(2021,2021,2022)
years2 <- c(2022,2023,2023)
for (y in 1:3){
traits1<- read.csv(paste0("data/combined_data/traits_and_HSR",years1[y],"_genotype_averaged.csv"))
traits2<- read.csv(paste0("data/combined_data/traits_and_HSR",years2[y],"_genotype_averaged.csv"))
ind <- which(colnames(traits1)%in%"mean_350")
traits1 <- traits1[,seq(1,ind-1)]
ind <- which(colnames(traits2)%in%"mean_350")
traits2 <- traits2[,seq(1,ind-1)]
for (v in 1:length(vars)){
trait1_v <- data.frame(Accession=traits1[,"Accession"], value=traits1[,vars[v]])
trait2_v <- data.frame(Accession=traits2[,"Accession"], value=traits2[,vars[v]])
rownames(trait1_v) <- trait1_v$Accession
rownames(trait2_v) <- trait2_v$Accession
acc <- intersect(trait1_v$Accession,trait2_v$Accession)
trait1_v <- trait1_v[acc,]
trait2_v <- trait2_v[acc,]
cormat[indvar,c]<-cor(trait1_v$value,trait2_v$value,method="pearson")
ncount[indvar,c]<-nrow(nrow(trait1_v))
}
}
rm(list = ls())
path0 <- "/home/mpimp-golm.mpg.de/xu2004/HyperspectralML/"
if (!dir.exists(path0)) {
path0 <- "C:/Users/Rudan/Documents/GitHub/HyperspectralML/"
}
setwd(path0)
vars<-c("SLA","C",  "N",  "CN", "d13C","d15N","Vpmax","Vmax","SL", "a400","gsw","Vpmax.Vmax","iWUE" ,"NPQ_ind_amp","NPQ_ind_rate","NPQ_rel_amp","NPQ_rel_rate",
"NPQ_rel_res","phiPSII_ind_amp","phiPSII_ind_rate","phiPSII_ind_res" , "NPQ_ind_linear",
"maxNPQ","endNPQ","endFvFm","initialFvFm")
cormat<-matrix(0,26,3)
ncount<-matrix(0,26,3)
rownames(cormat)<-vars
years1 <- c(2021,2021,2022)
years2 <- c(2022,2023,2023)
for (y in 1:3){
traits1<- read.csv(paste0("data/combined_data/traits_and_HSR",years1[y],"_genotype_averaged.csv"))
traits2<- read.csv(paste0("data/combined_data/traits_and_HSR",years2[y],"_genotype_averaged.csv"))
ind <- which(colnames(traits1)%in%"mean_350")
traits1 <- traits1[,seq(1,ind-1)]
ind <- which(colnames(traits2)%in%"mean_350")
traits2 <- traits2[,seq(1,ind-1)]
for (v in 1:length(vars)){
trait1_v <- data.frame(Accession=traits1[,"Accession"], value=traits1[,vars[v]])
trait2_v <- data.frame(Accession=traits2[,"Accession"], value=traits2[,vars[v]])
rownames(trait1_v) <- trait1_v$Accession
rownames(trait2_v) <- trait2_v$Accession
acc <- intersect(trait1_v$Accession,trait2_v$Accession)
trait1_v <- trait1_v[acc,]
trait2_v <- trait2_v[acc,]
cormat[indvar,c]<-cor(trait1_v$value,trait2_v$value,method="pearson")
ncount[indvar,c]<-nrow(nrow(trait1_v))
}
}
for (y in 1:3){
traits1<- read.csv(paste0("data/combined_data/traits_and_HSR",years1[y],"_genotype_averaged.csv"))
traits2<- read.csv(paste0("data/combined_data/traits_and_HSR",years2[y],"_genotype_averaged.csv"))
ind <- which(colnames(traits1)%in%"mean_350")
traits1 <- traits1[,seq(1,ind-1)]
ind <- which(colnames(traits2)%in%"mean_350")
traits2 <- traits2[,seq(1,ind-1)]
for (v in 1:length(vars)){
trait1_v <- data.frame(Accession=traits1[,"Accession"], value=traits1[,vars[v]])
trait2_v <- data.frame(Accession=traits2[,"Accession"], value=traits2[,vars[v]])
rownames(trait1_v) <- trait1_v$Accession
rownames(trait2_v) <- trait2_v$Accession
acc <- intersect(trait1_v$Accession,trait2_v$Accession)
trait1_v <- trait1_v[acc,]
trait2_v <- trait2_v[acc,]
cormat[v,y]<-cor(trait1_v$value,trait2_v$value,method="pearson")
ncount[v,y]<-nrow(nrow(trait1_v))
}
}
for (y in 1:3){
traits1<- read.csv(paste0("data/combined_data/traits_and_HSR",years1[y],"_genotype_averaged.csv"))
traits2<- read.csv(paste0("data/combined_data/traits_and_HSR",years2[y],"_genotype_averaged.csv"))
ind <- which(colnames(traits1)%in%"mean_350")
traits1 <- traits1[,seq(1,ind-1)]
ind <- which(colnames(traits2)%in%"mean_350")
traits2 <- traits2[,seq(1,ind-1)]
for (v in 1:length(vars)){
trait1_v <- data.frame(Accession=traits1[,"Accession"], value=traits1[,vars[v]])
trait2_v <- data.frame(Accession=traits2[,"Accession"], value=traits2[,vars[v]])
rownames(trait1_v) <- trait1_v$Accession
rownames(trait2_v) <- trait2_v$Accession
acc <- intersect(trait1_v$Accession,trait2_v$Accession)
trait1_v <- trait1_v[acc,]
trait2_v <- trait2_v[acc,]
cormat[v,y]<-cor(trait1_v$value,trait2_v$value,method="pearson")
ncount[v,y]<-nrow(trait1_v)
}
}
View(cormat)
ind <- intersect(complete.cases(trait1_v),complete.cases(trait2_v))
complete.cases(trait1_v)
ind <- intersect(which(complete.cases(trait1_v)),which(complete.cases(trait2_v)))
for (y in 1:3){
traits1<- read.csv(paste0("data/combined_data/traits_and_HSR",years1[y],"_genotype_averaged.csv"))
traits2<- read.csv(paste0("data/combined_data/traits_and_HSR",years2[y],"_genotype_averaged.csv"))
ind <- which(colnames(traits1)%in%"mean_350")
traits1 <- traits1[,seq(1,ind-1)]
ind <- which(colnames(traits2)%in%"mean_350")
traits2 <- traits2[,seq(1,ind-1)]
for (v in 1:length(vars)){
trait1_v <- data.frame(Accession=traits1[,"Accession"], value=traits1[,vars[v]])
trait2_v <- data.frame(Accession=traits2[,"Accession"], value=traits2[,vars[v]])
rownames(trait1_v) <- trait1_v$Accession
rownames(trait2_v) <- trait2_v$Accession
acc <- intersect(trait1_v$Accession,trait2_v$Accession)
trait1_v <- trait1_v[acc,]
trait2_v <- trait2_v[acc,]
ind <- intersect(which(complete.cases(trait1_v)),which(complete.cases(trait2_v)))
cormat[v,y]<-cor(trait1_v$value,trait2_v$value,method="pearson")
ncount[v,y]<-nrow(trait1_v)
}
}
for (y in 1:3){
traits1<- read.csv(paste0("data/combined_data/traits_and_HSR",years1[y],"_genotype_averaged.csv"))
traits2<- read.csv(paste0("data/combined_data/traits_and_HSR",years2[y],"_genotype_averaged.csv"))
ind <- which(colnames(traits1)%in%"mean_350")
traits1 <- traits1[,seq(1,ind-1)]
ind <- which(colnames(traits2)%in%"mean_350")
traits2 <- traits2[,seq(1,ind-1)]
for (v in 1:length(vars)){
trait1_v <- data.frame(Accession=traits1[,"Accession"], value=traits1[,vars[v]])
trait2_v <- data.frame(Accession=traits2[,"Accession"], value=traits2[,vars[v]])
rownames(trait1_v) <- trait1_v$Accession
rownames(trait2_v) <- trait2_v$Accession
acc <- intersect(trait1_v$Accession,trait2_v$Accession)
trait1_v <- trait1_v[acc,]
trait2_v <- trait2_v[acc,]
ind <- intersect(which(complete.cases(trait1_v)),which(complete.cases(trait2_v)))
trait1_v <- trait1_v[ind,]
trait2_v <- trait2_v[ind,]
cormat[v,y]<-cor(trait1_v$value,trait2_v$value,method="pearson")
ncount[v,y]<-nrow(trait1_v)
}
}
cormat <- round(cormat,3)
cormat
meancor <- apply(cormat,2,mean)
meancor <- apply(cormat,1,mean)
meancor
meancor <- round(apply(cormat,1,mean),3)
meancor
sort(meancor)
meancor <- round(apply(cormat,1,mean),2)
sort(meancor)
meancor <- round(apply(cormat,1,mean),3)
meancor
meancor
cormat <- rbind(cormat,meancor)
meancor
rm(list = ls())
path0 <- "/home/mpimp-golm.mpg.de/xu2004/HyperspectralML/"
if (!dir.exists(path0)) {
path0 <- "C:/Users/Rudan/Documents/GitHub/HyperspectralML/"
}
setwd(path0)
years1 <- c(2021,2021,2022)
years2 <- c(2022,2023,2023)
y=1
HSR1<- read.csv(paste0("data/combined_data/traits_and_HSR",years1[y],"_genotype_averaged.csv"))
HSR2<- read.csv(paste0("data/combined_data/traits_and_HSR",years2[y],"_genotype_averaged.csv"))
HSR1 <- HSR1[,seq(ind,ncol(HSR1))]
ind <- which(colnames(HSR1)%in%"mean_350")
HSR1 <- HSR1[,seq(ind,ncol(HSR1))]
ind <- which(colnames(HSR2)%in%"mean_350")
HSR2 <- HSR2[,seq(ind,ncol(HSR2))]
HSR1<- read.csv(paste0("data/combined_data/traits_and_HSR",years1[y],"_genotype_averaged.csv"))
HSR2<- read.csv(paste0("data/combined_data/traits_and_HSR",years2[y],"_genotype_averaged.csv"))
View(HSR1)
View(HSR2)
rownames(HSR1) <- HSR1$Accession
rownames(HSR2) <- HSR2$Accession
ind <- which(colnames(HSR1)%in%"mean_350")
HSR1 <- HSR1[,seq(ind,ncol(HSR1))]
ind <- which(colnames(HSR2)%in%"mean_350")
HSR2 <- HSR2[,seq(ind,ncol(HSR2))]
acc <- intersect(rownames(HSR1),rownames(trait2_v))
acc <- intersect(rownames(HSR1),rownames(HSR2))
HSR1 <- HSR1[acc,]
HSR2 <- HSR2[acc,]
cormat<-matrix(0,3,2151)
y
w
w=1
cormat[y,w]<-cor(HSR1[,w],HSR2[,w])
View(cormat)
HSR1[,w]
years1 <- c(2021,2021,2022)
years2 <- c(2022,2023,2023)
cormat<-matrix(0,3,2151)
for (y in 1:3){
HSR1<- read.csv(paste0("data/combined_data/traits_and_HSR",years1[y],"_genotype_averaged.csv"))
HSR2<- read.csv(paste0("data/combined_data/traits_and_HSR",years2[y],"_genotype_averaged.csv"))
rownames(HSR1) <- HSR1$Accession
rownames(HSR2) <- HSR2$Accession
ind <- which(colnames(HSR1)%in%"mean_350")
HSR1 <- HSR1[,seq(ind,ncol(HSR1))]
ind <- which(colnames(HSR2)%in%"mean_350")
HSR2 <- HSR2[,seq(ind,ncol(HSR2))]
acc <- intersect(rownames(HSR1),rownames(HSR2))
HSR1 <- HSR1[acc,]
HSR2 <- HSR2[acc,]
for (w in 1:ncol(HSR1)){
cormat[y,w]<-cor(HSR1[,w],HSR2[,w])
}
}
cor_vec <- mapply(function(x, y) cor(x, y), as.data.frame(HSR1,HSR2))
cor_vec <- mapply(function(x, y) cor(x, y), HSR1,HSR2)
for (y in 1:3){
HSR1<- read.csv(paste0("data/combined_data/traits_and_HSR",years1[y],"_genotype_averaged.csv"))
HSR2<- read.csv(paste0("data/combined_data/traits_and_HSR",years2[y],"_genotype_averaged.csv"))
rownames(HSR1) <- HSR1$Accession
rownames(HSR2) <- HSR2$Accession
ind <- which(colnames(HSR1)%in%"mean_350")
HSR1 <- HSR1[,seq(ind,ncol(HSR1))]
ind <- which(colnames(HSR2)%in%"mean_350")
HSR2 <- HSR2[,seq(ind,ncol(HSR2))]
acc <- intersect(rownames(HSR1),rownames(HSR2))
HSR1 <- HSR1[acc,]
HSR2 <- HSR2[acc,]
cormat[y,] <- mapply(function(x, y) cor(x, y), HSR1,HSR2)
}
colnames(HSR1)[ncol(HSR1)]
colnames(cormat) <- paste0("mean_",seq(350,2500))
hstart<-which(colnames(cormat)%in%paste0("mean_",350))
hend<-which(colnames(cormat)%in%paste0("mean_",700))
mean(cormat[,hstart:hend])
mean(cormat[1,hstart:hend])
mean(cormat[2,hstart:hend])
round(cormat[1,hstart:hend],3)
round(mean(cormat[1,hstart:hend]),3)
round(mean(cormat[1,hstart:hend]),3)
round(mean(cormat[2,hstart:hend]),3)
round(mean(cormat[3,hstart:hend]),3)
hstart<-which(colnames(cormat)%in%paste0("mean_",700))
hend<-which(colnames(cormat)%in%paste0("mean_",1300))
round(mean(cormat[1,hstart:hend]),3)
round(mean(cormat[2,hstart:hend]),3)
round(mean(cormat[3,hstart:hend]),3)
hstart<-which(colnames(cormat)%in%paste0("mean_",1300))
hend<-which(colnames(cormat)%in%paste0("mean_",2500))
round(mean(cormat[,hstart:hend]),3)
round(mean(cormat[2,hstart:hend]),3)
round(mean(cormat[3,hstart:hend]),3)
